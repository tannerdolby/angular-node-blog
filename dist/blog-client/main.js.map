{"version":3,"sources":["./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/tags/tags.component.html","./src/app/components/tags/tags.component.ts","./src/environments/environment.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/services/post.service.ts","./src/app/components/contact/contact.component.ts","./src/app/components/contact/contact.component.html","./src/app/components/common/footer/footer.component.ts","./src/app/components/common/footer/footer.component.html","./src/app/components/common/header/header.component.ts","./src/app/components/common/header/header.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/post/post.component.html","./src/app/components/post/post.component.ts","./src/app/app.module.ts","./src/app/components/notfound/notfound.component.ts","./src/app/components/notfound/notfound.component.html","./src/app/components/blog/blog.component.html","./src/app/components/blog/blog.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    <section>\n        <h1>About Me</h1>\n        <p>Hi there! My name is John Smith. I am an aspiring backend developer with a passion for the web. Feel free to fill out this section with your own information (like a headshot) and maybe some social links where you are located around the web.</p>\n    </section>\n</div>\n\n","<div class=\"wrapper\">\n    <h1>Blog</h1>\n    <div class=\"tagged\">\n        <p *ngIf=\"postsWithTag.length > 1\" class=\"posts-tagged\">{{ postsWithTag.length }} posts tagged: #{{ tag }}</p>\n        <p *ngIf=\"postsWithTag.length === 1\" class=\"posts-tagged\">{{ postsWithTag.length }} post tagged: #{{ tag }}</p>\n        <button (click)=\"clear()\">clear</button>\n    </div>\n    <section>\n        <mat-card *ngFor=\"let article of postsWithTag\" role=\"group\">\n            <mat-card-title><a routerLink=\"/blog/{{ article.slug }}\">{{ article.title }}</a></mat-card-title>\n            <mat-card-subtitle class=\"date\">Published on <time>{{ article.date | date }}</time> &bull; tagged with <a class=\"tag\" *ngFor=\"let tag of article.tags\" (click)=\"refresh(tag)\" routerLink=\"/blog/category/{{ tag }}\">#{{ tag }}</a></mat-card-subtitle>\n            <mat-card-content>{{ article.preview }}</mat-card-content>\n        </mat-card>\n    </section>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PostService } from 'src/app/services/post.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-tags',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.css']\n})\nexport class TagsComponent implements OnInit {\n\n  postsWithTag: any = [];\n  tag: string = \"\";\n\n  // re render postsWithTag when tag permalink is clicked on /blog/category/:tag page\n  constructor(private postService: PostService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.tag = window.location.pathname.substr(15);\n    this.postService.getPostsByTag(this.tag).subscribe((response: any) => {\n      response.forEach((r: any) => {\n        r.slug = this.postService.slugify(r.title);\n      });\n      console.log(response);\n      this.postsWithTag = response;\n    })\n  }\n\n  clear() {\n    this.router.navigate([\"/blog\"]);\n  }\n\n  slugify(title: string) {\n    return this.postService.slugify(title);\n  }\n\n  refresh(tag: string) {\n    this.postService.getPostsByTag(tag).subscribe((response: any) => {\n      response.map((r: any) => {\n        r.slug = this.slugify(r.title);\n      });\n      this.postsWithTag = response;\n    });\n    this.tag = tag;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"bg\">\n    <header>\n        <h1>Angular + Node.js Blog Template</h1>\n    </header>\n    <div class=\"wrapper\">\n        <p class=\"hero-desc\">A blog template built with Angular (Angular Material) and Node.js (Express). The blog posts are created within the <code>/pages</code> directory and are rendered on their respective pages using an API endpoint and a single \"posts\" component which acts as a template to display each blog post. Update the <code>/assets/blog.json</code> data with each blog posts metadata.</p>\n        <section>\n            <h2>Recent Articles</h2>\n            <div class=\"articles\">\n                <mat-card *ngFor=\"let article of recent\" role=\"group\">\n                    <mat-card-title><a routerLink=\"/blog/{{ article.slug }}\">{{ article.title }}</a></mat-card-title>\n                    <mat-card-subtitle>Published on <time>{{ article.date | date }}</time> &bull; tagged with <a class=\"tag\" *ngFor=\"let tag of article.tags\" routerLink=\"/blog/category/{{ tag }}\">#{{ tag }}</a></mat-card-subtitle>\n                    <mat-card-content>{{ article.preview }}</mat-card-content>\n                </mat-card>\n            </div>\n        </section>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/services/post.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  recent: any;\n  tags: String[] = [];\n\n  constructor(private postService: PostService) { }\n\n  ngOnInit(): void {\n    this.postService.getRecentPosts().subscribe((response: any) => {\n      response.forEach((r: any) => {\n        r.date = new Date(r.date);\n        this.tags = r.tags;\n      });\n      console.log(response);\n      this.recent = response;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n// import { fetch } from '';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  // Node/Express local endpoints\n  postsUrl: string = \"http://localhost:4000/blog\";\n  recentPostsUrl: string = \"http://localhost:4000/recent\";\n  postsByTagUrl: string = \"http://localhost:4000/blog/category\";\n  \n  // Netlify Lambda function endpoints\n  recentLambdaUrl: string = \"http://localhost:9000/.netlify/functions/app/recent\";\n  postLambdaUrl: string = \"http://localhost:9000/.netlify/functions/app/blog\";\n  allPostsLambdaUrl: string = \"http://localhost:9000/.netlify/functions/app/blog\";\n  postsByTagLambdaUrl: string = \"http://localhost:9000/.netlify/functions/app/blog/category\";\n  recentPosts: string = \"https://modest-bhabha-3a9de8.netlify.app/.netlify/functions/rawr\";\n\n  constructor(private http: HttpClient) { }\n\n  getPost(slug: string) {\n    return this.http.get(`${this.postLambdaUrl}/${slug}`);\n  }\n\n  getRecentPosts() {\n    return this.http.get(`${this.recentPosts}`, { \n      headers: { \n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\n        'Content-Type': 'text/plain',\n        'Accept': \"application/json\"\n    }});\n  }\n\n  getPostsByTag(tag: string) {\n    return this.http.get(`${this.postsByTagLambdaUrl}/${tag}`);\n  }\n\n  getAllPosts() {\n    return this.http.get(`${this.allPostsLambdaUrl}`);\n  }\n\n  slugify(str: string) {\n    const regex = new RegExp(/\\W+/, \"gm\");\n    const slug = str.replace(regex, \" \").toLowerCase().split(\" \").join(\"-\");\n    return slug;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators, FormGroup, NgForm } from '@angular/forms';\nimport * as siteData from '../../../assets/site.json';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  contactForm: any;\n  contact: any;\n  cName: any;\n  cEmail: any;\n  cMessage: any;\n  myEmail: string = siteData.site.email;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.contactForm = this.fb.group({\n      name: new FormControl(\"\", Validators.required),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      message: new FormControl(\"\", Validators.required)\n    });\n    this.cName = this.name;\n    this.cEmail = this.email;\n    this.cMessage = this.message;\n  }\n\n  submit() {\n    // update `myEmail` in site.json with your current email\n    window.location.href = `mailto:${this.myEmail}?body=${this.contactForm.value.message}`;\n    this.contactForm.reset();\n    this.contactForm.markAsPristine();\n    let controls = this.contactForm.controls;\n    for (const control in controls) {\n      if (this.contactForm.controls[control].errors !== null) {\n        this.contactForm.controls[control].setErrors(null);\n      }\n    }\n  }\n\n  get name() {\n    return this.contactForm.get(\"name\");\n  }\n\n  get email() {\n    return this.contactForm.get(\"email\");\n  }\n\n  get message() {\n    return this.contactForm.get(\"message\");\n  }\n\n}\n","<div class=\"wrapper\">\n    <section>\n        <h1>Contact</h1>\n        <p>Feel free to send me a message if you would like to discuss a project or opportunity. I'm also available through Twitter, if that's more your style.</p>\n        <form [formGroup]=\"contactForm\" (ngSubmit)=\"submit()\" class=\"contact-form\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Name</mat-label>\n                <input type=\"text\" matInput formControlName=\"name\" placeholder=\"Enter name\">\n                <mat-error *ngIf=\"cName.invalid\">Name is required.</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Email</mat-label>\n                <input type=\"text\" matInput formControlName=\"email\" placeholder=\"Enter email\">\n                <mat-error *ngIf=\"!contactForm.submitted && cEmail.invalid && cEmail.errors?.required == true\">Email is required.</mat-error>\n                <mat-error *ngIf=\"!contactForm.submitted && cEmail.errors?.email == true\">Invalid email format.</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Message</mat-label>\n                <textarea matInput name=\"message\" id=\"message\" formControlName=\"message\" placeholder=\"Enter message\"></textarea>\n                <mat-error *ngIf=\"cMessage.invalid\">Message is required.</mat-error>\n            </mat-form-field>\n            <div class=\"submit\">\n                <button title=\"Please fill in all form fields.\" *ngIf=\"contactForm.status === 'INVALID'\" disabled type=\"submit\">Submit</button>\n                <button *ngIf=\"contactForm.status === 'VALID'\" type=\"submit\">Submit</button>\n            </div>\n        </form>\n    </section>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { site } from '../../../../assets/site.json';\nimport { socials } from '../../../../assets/site.json';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  currYear: Number = 0;\n  author: String = \"\";\n  nav: any = {};\n  socials: any = {};\n  pathName: String = \"\";\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    this.pathName = window.location.pathname;\n    this.currYear = this.getCurrentYear();\n    this.author = site.author;\n    this.socials = socials;\n    this.nav = site.nav;\n  }\n\n  getCurrentYear() {\n    const year = new Date().getFullYear();\n    return year;\n  }\n\n  backToTop() {\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n  }\n\n}\n","<footer>\n    <div class=\"wrapper\">\n        <div class=\"row\">\n            <ul class=\"footer-nav\">\n                <li><a routerLink=\"{{ nav.home }}\">Home</a></li>\n                <li><a routerLink=\"{{ nav.blog }}\">Blog</a></li>\n                <li><a routerLink=\"{{ nav.about }}\">About</a></li>\n                <li><a routerLink=\"{{ nav.contact }}\">Contact</a></li>\n                <li><a href=\"{{ socials.twitter }}\">Twitter</a></li>\n                <li><a href=\"{{ socials.github }}\">Github</a></li>\n                <li><a href=\"{{ socials.codepen }}\">CodePen</a></li>\n            </ul>\n        </div>\n        <div class=\"copyright\">\n            <p>&copy; {{ currYear }} {{ author }}. Hosted with Netlify</p>\n            <button (click)=\"backToTop()\">Back to top</button>\n        </div>\n    </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav id=\"#nav\">\n    <div class=\"wrapper\">\n        <div class=\"logo\"> \n            <a routerLink=\"/\">\n                <span>John Smith</span>\n            </a>\n        </div>\n        <ul>\n            <li><a routerLink=\"/\">Home</a></li>\n            <li><a routerLink=\"/blog/\">Blog</a></li>\n            <li><a routerLink=\"/about\">About</a></li>\n            <li><a routerLink=\"/contact\">Contact</a></li>\n        </ul>\n    </div>\n</nav>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'blog-template';\n}\n","<app-header></app-header>\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>","<div class=\"wrapper\">\n    <article *ngIf=\"postData.metadata !== undefined && postData.post !== undefined\">\n        <h1>{{ postData.metadata.title }}</h1>\n        <p class=\"date\">Published on <time>{{ postData.metadata.date | date }}</time> &bull; tagged with <a class=\"tag\" *ngFor=\"let tag of tags\" routerLink=\"/blog/category/{{ tag }}\">#{{ tag }}</a></p>\n        <img src=\"{{ postData.metadata.image }}\" alt=\"Some alt text\">\n        <p>{{ postData.metadata.preview }}</p>\n        <div [innerHTML]=\"postData.post.content\"></div>\n    </article>\n    <div class=\"nav-posts\" *ngIf=\"postData !== undefined\">\n        <button (click)=\"prevPost(allPosts)\">Previous</button>\n        <button (click)=\"nextPost(allPosts)\">Next</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/services/post.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  postData: any = {};\n  allPosts: any = {};\n  tags: String[] = [];\n  pos: number = 0;\n  updatePage: any = {};\n\n  constructor(private postService: PostService, private router: Router) { }\n\n  ngOnInit(): void {\n    // get the location of the current URLs path\n    const slug = window.location.pathname.substr(6);\n    const routerSlug = this.router.url.slice(6);\n    \n    this.postService.getPost(slug || routerSlug).subscribe((response: any) => {\n      this.postData = response;\n      this.tags = response.metadata.tags;\n    });\n\n    this.postService.getAllPosts().subscribe((response: any) => {\n      this.allPosts = response;\n      response.map((r: any) => {\n        r.slug = this.postService.slugify(r.title);\n      })\n      this.pos = this.getPostIndex(this.postData, this.allPosts);\n      console.log(this.pos);\n    });\n  }\n\n  getPostIndex(data: any, allPosts: any) {\n    let pos;\n    if (data.post.slug || data.slug) {\n      pos = allPosts.map((p: any) => p.slug).indexOf(data.post.slug || data.slug);\n    }\n    return pos;\n  }\n\n  nextPost(posts: any) {\n    let index = this.pos;\n    let p = index + 1 >= posts.length ? posts[0] : posts[index + 1];\n    this.postService.getPost(p.slug).subscribe(response => {\n      this.postData = response;\n      if (this.pos >= posts.length - 1) {\n        this.pos = 0;\n      } else {\n        this.pos += 1;\n      }\n      console.log(this.pos);\n    });\n  }\n\n  prevPost(posts: any) {\n    let index = this.pos;\n    let p = index - 1 < 0 ? posts[posts.length - 1] : posts[index - 1];\n    this.postService.getPost(p.slug).subscribe(response => {\n      this.postData = response;\n      if (this.pos <= 0) {\n        this.pos = posts.length - 1;\n      } else {\n      this.pos -= 1;\n      }\n    });\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PostComponent } from './components/post/post.component';\nimport { NotfoundComponent } from './components/notfound/notfound.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostService } from './services/post.service';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HeaderComponent } from './components/common/header/header.component';\nimport { FooterComponent } from './components/common/footer/footer.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TagsComponent } from './components/tags/tags.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    NotfoundComponent,\n    BlogComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    AboutComponent,\n    ContactComponent,\n    TagsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    RouterModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [\n    PostService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    <h1>Page not found!</h1>\n    <p>This tends to happen when you click a broken or mistyped link.</p>\n</div>\n","<div class=\"wrapper\">\n    <h1>Blog</h1>\n    <section>\n        <mat-card *ngFor=\"let article of articles\" role=\"group\">\n            <mat-card-title><a routerLink=\"/blog/{{ article.slug }}\">{{ article.title }}</a></mat-card-title>\n            <mat-card-subtitle class=\"date\">Published on <time>{{ article.date | date }}</time> &bull; tagged with <a class=\"tag\" *ngFor=\"let tag of article.tags\" routerLink=\"/blog/category/{{ tag }}\">#{{ tag }}</a></mat-card-subtitle>\n            <mat-card-content>{{ article.preview }}</mat-card-content>\n        </mat-card>\n    </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/services/post.service';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n\n  articles: any = [];\n\n  constructor(private postService: PostService) { }\n\n  ngOnInit(): void {\n    this.postService.getAllPosts().subscribe(response => {\n      this.articles = response;\n      this.articles.map((a: any) => {\n        a.slug = this.slugify(a.title);\n      });\n    });\n  }\n\n  slugify(str: string) {\n    const slug = this.postService.slugify(str);\n    return slug;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotfoundComponent } from './components/notfound/notfound.component';\nimport { PostComponent } from './components/post/post.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { BlogComponent } from './components/blog/blog.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { ContactComponent } from './components/contact/contact.component';\nimport { TagsComponent } from './components/tags/tags.component';\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent },\n  { path: \"blog\", component: BlogComponent },\n  { path: \"blog/:post\", component: PostComponent },\n  { path: \"blog/category/:tag\", component: TagsComponent },\n  { path: \"about\", component: AboutComponent },\n  { path: \"contact\", component: ContactComponent },\n  { path: \"**\", component: NotfoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}